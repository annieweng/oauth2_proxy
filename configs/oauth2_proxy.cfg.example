## OAuth2 Proxy Config File
## https://github.com/bitly/oauth2_proxy


## <addr>:<port> to listen on for HTTP/HTTPS clients
 http_address = "0.0.0.0:4180"
# https_address = ":443"
skip_provider_button = true
## TLS Settings
#tls_cert_file = "cert.pem"
#tls_key_file = "key.pem"


## Log requests to stdout
 request_logging = true

## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream
# pass_basic_auth = true
## pass the request Host Header to upstream
## when disabled the upstream Host is used as the Host Header
pass_host_header =  true 





## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
pass_access_token = true 

set_authorization_header = true
pass_authorization_header = true

## Authenticated Email Addresses File (one email per line)
# authenticated_emails_file = ""

## Htpasswd File (optional)
## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -s" for SHA encryption
## enabling exposes a username/login signin form
# htpasswd_file = ""

## Templates
## optional directory with custom sign_in.html and error.html
# custom_templates_dir = ""

## Cookie Settings
## Name     - the cookie name
## Secret   - the seed string for secure cookies; should be 16, 24, or 32 bytes
##            for use with an AES cipher when cookie_refresh or pass_access_token
##            is set
## Domain   - (optional) cookie domain to force cookies to (ie: .yourcompany.com)
## Expire   - (duration) expire timeframe for cookie
## Refresh  - (duration) refresh the cookie when duration has elapsed after cookie was initially set.
##            Should be less than cookie_expire; set to 0 to disable.
##            On refresh, OAuth token is re-validated. 
##            (ie: 1h means tokens are refreshed on request 1hr+ after it was set)
## Secure   - secure cookies are only sent by the browser of a HTTPS connection (recommended)
## HttpOnly - httponly cookies are not readable by javascript (recommended)
cookie_name = "_oauth2_proxy"
cookie_secret = "supersecret"
# cookie_domain = ""
# cookie_expire = "168h"
cookie_expire = "1h"
cookie_refresh = "30m"
cookie_secure = false 
cookie_httponly = false 

## The OAuth Client ID, Secret
client_id = "xxxxxx"
client_secret= "xkcjs"



## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
email_domains = [
     "*"
]
## the http url(s) of the upstream endpoint. If multiple, routing is based on path
upstreams = [
"http://10.104.1.36:8080"
]

ssl-insecure-skip-verify = true
provider="dsra"
proxy-prefix="/oauth2"
## the OAuth Redirect URL.
# defaults to the "https://" + requested host header + "/oauth2/callback"
redirect_url="https://oauth2-proxy.dsra.io/oauth2/callback"
scope="profile"
login_url="https://oauth2-server.dsra.io/oauth/authorize"
redeem_url="https://oauth2-server.dsra.io/oauth/token"
validate_url="https://oauth2-server.dsra.io/oauth/api/me"
